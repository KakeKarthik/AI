# -*- coding: utf-8 -*-
"""waterJugP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zgWVJ_3uf_0h07gif5aV_vxUNgoHqYZj
"""



from collections import defaultdict
jug1= int(input('Enter Jug1 capacity : '))
jug2 = int(input('Enter Jug2 capacity : '))
aim = int(input('Enter goal capacity : '))
def deaf():
    return False

visited = defaultdict(deaf)

def waterJugSolver(amt1, amt2):
    if (amt1 == aim and amt2 == 0) or (amt2 == aim and amt1 == 0):
        print("(",amt1, amt2,")")
        return True
    if visited[(amt1, amt2)] == False:
        print("(",amt1, amt2,")",end = " --> ")
        visited[(amt1, amt2)] = True
        return (waterJugSolver(0, amt2) or
                waterJugSolver(amt1, 0) or
                waterJugSolver(jug1, amt2) or
                waterJugSolver(amt1, jug2) or
                waterJugSolver(amt1 + min(amt2, (jug1-amt1)),amt2 - min(amt2, (jug1-amt1))) or
                waterJugSolver(amt1 - min(amt1, (jug2-amt2)),amt2 + min(amt1, (jug2-amt2))))
    else:
        return False

print("Steps: ")
waterJugSolver(0, 0)
'''
Enter Jug1 capacity : 3
Enter Jug2 capacity : 2
Enter goal capacity : 5
Steps: 
( 0 0 ) --> ( 3 0 ) --> ( 3 2 ) --> ( 0 2 ) --> ( 2 0 ) --> ( 2 2 ) --> ( 3 1 ) --> ( 0 1 ) --> ( 1 0 ) --> ( 1 2 ) --> False
'''

"""Empty the first jug completely
Empty the second jug completely
Fill the first jug
Fill the second jug
Fill the water from the second jug into the first jug until the first jug is full or the second jug has no water left
Fill the water from the first jug into the second jug until the second jug is full or the first jug has no water left
"""



